@model List<ProjectWebsite.ViewModels.CartItemViewModel>
@{
    ViewData["Title"] = "Giỏ hàng của bạn";
    decimal total = Model.Sum(item => item.Price * item.Quantity);
}

<div class="container my-5">
    @if (Model.Any())
    {
        <h2 class="mb-4">@ViewData["Title"]</h2>
        <div class="row">
            <div class="col-lg-8">
                <table class="table align-middle">
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="cart-item-row" data-product-id="@item.ProductId">
                                <td width="100">
                                    <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/default-book.jpg" : item.ImageUrl)" class="img-fluid rounded" alt="@item.ProductName">
                                </td>
                                <td>
                                    <h5 class="mb-0">@item.ProductName</h5>
                                    <p class="text-muted mb-0">Giá: @item.Price.ToString("N0")đ</p>
                                </td>
                                <td width="120">
                                    <input type="number" value="@item.Quantity" min="1" class="form-control quantity-input" data-id="@item.ProductId">
                                </td>
                                <td width="150" class="text-end">
                                    @{
                                        var itemTotal = item.Price * item.Quantity;
                                    }
                                    <strong class="item-total">@itemTotal.ToString("N0")đ</strong>
                                </td>
                                <td width="50" class="text-center">
                                    <button class="btn btn-sm btn-outline-danger remove-from-cart" data-id="@item.ProductId" title="Xóa">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Tóm tắt đơn hàng</h5>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between">
                                <span>Tạm tính</span>
                                <strong id="subtotal">@total.ToString("N0")đ</strong>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <span>Phí vận chuyển</span>
                                <span>Miễn phí</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Tổng cộng</strong>
                                <strong id="grandtotal" class="h5 text-danger">@total.ToString("N0")đ</strong>
                            </li>
                        </ul>
                        <div class="d-grid mt-3">
                            <button id="checkoutBtn" class="btn btn-primary">Tiến hành thanh toán</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-shopping-cart fa-4x text-muted mb-3"></i>
            <h3>Giỏ hàng của bạn đang trống</h3>
            <p>Hãy khám phá và thêm sản phẩm bạn yêu thích vào giỏ hàng nhé!</p>
            <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Tiếp tục mua sắm</a>
        </div>
    }
</div>

<div class="modal fade" id="qrModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Quét mã để thanh toán</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <p>Ngân hàng: <strong class="text-primary">MB BANK</strong></p>
                <p>Chủ tài khoản: <strong class="text-primary">TRAN QUANG VIET</strong></p>
                <p>Số tiền: <strong id="qrAmount" class="text-danger h4"></strong></p>
                <p>Nội dung: <strong id="qrContent" class="text-success"></strong></p>
                <img id="qrImage" src="" class="img-fluid" alt="QR Code" />
                <p class="mt-3 text-muted">Mở ứng dụng ngân hàng và quét mã QR để hoàn tất thanh toán.</p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" id="confirmPaymentBtn" class="btn btn-success">Tôi đã thanh toán</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            function updateTotals() {
                let subtotal = 0;
                $('.cart-item-row').each(function () {
                    const priceText = $(this).find('p.text-muted').text();
                    const price = parseFloat(priceText.replace(/[^0-9]/g, ''));
                    const quantity = parseInt($(this).find('.quantity-input').val());
                    if (!isNaN(price) && !isNaN(quantity)) {
                        const itemTotal = price * quantity;
                        subtotal += itemTotal;
                        $(this).find('.item-total').text(itemTotal.toLocaleString('vi-VN') + 'đ');
                    }
                });
                if (subtotal === 0 && $('.cart-item-row').length === 0) {
                    location.reload();
                }
                $('#subtotal').text(subtotal.toLocaleString('vi-VN') + 'đ');
                $('#grandtotal').text(subtotal.toLocaleString('vi-VN') + 'đ');
            }

            $('.remove-from-cart').on('click', function () {
                const productId = $(this).data('id');
                const row = $(this).closest('tr');
                if (confirm('Bạn có muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                    $.post('@Url.Action("RemoveFromCart", "Cart")', { productId: productId })
                        .done(function (response) {
                            if (response.success) {
                                row.remove();
                                updateTotals();
                            }
                        });
                }
            });

            $('.quantity-input').on('change', function () {
                const productId = $(this).data('id');
                const quantity = $(this).val();
                if (quantity < 1) {
                    $(this).val(1);
                    return;
                }
                $.post('@Url.Action("UpdateCart", "Cart")', { productId: productId, quantity: quantity })
                    .done(function () {
                        updateTotals();
                    });
            });

            // Xử lý nút "Tiến hành thanh toán"
            $('#checkoutBtn').on('click', function () {
                var button = $(this);
                button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> Đang tạo đơn...');

                // Bước 1: Gọi server để tạo đơn hàng trước
                $.post('@Url.Action("CreateOrder", "Checkout")')
                    .done(function (response) {
                        if (response.success) {
                            // Bước 2: Dùng thông tin server trả về để tạo mã QR
                            const bankId = "MBBANK"; // THAY THÔNG TIN CỦA BẠN
                            const accountNo = "0061456789999"; // THAY THÔNG TIN CỦA BẠN
                            const accountName = "TRAN QUANG VIET"; // THAY THÔNG TIN CỦA BẠN
                            const amount = response.amount;
                            const orderInfo = "tthd" + response.orderId + "stk" +response.userId; // Tạo nội dung ở đây

                            const qrLink = `https://img.vietqr.io/image/${bankId}-${accountNo}-compact2.png?amount=${amount}&addInfo=${encodeURIComponent(orderInfo)}&accountName=${encodeURIComponent(accountName)}`;

                            // Bước 3: Hiển thị thông tin lên modal
                            $('#qrAmount').text(amount.toLocaleString('vi-VN') + 'đ');
                            $('#qrContent').text(orderInfo);
                            $('#qrImage').attr('src', qrLink);

                            var qrModal = new bootstrap.Modal(document.getElementById('qrModal'));
                            qrModal.show();
                        } else {
                            alert(response.message || 'Có lỗi xảy ra khi tạo đơn hàng.');
                        }
                    })
                    .fail(function () {
                        alert('Không thể kết nối đến server để tạo đơn hàng.');
                    })
                    .always(function() {
                        button.prop('disabled', false).html('Tiến hành thanh toán');
                    });
            });

            // Xử lý nút "Tôi đã thanh toán" trong modal
            // Nút này bây giờ chỉ cần đóng modal và chuyển hướng người dùng
            $('#confirmPaymentBtn').on('click', function() {
                alert('Cảm ơn bạn đã đặt hàng! Đơn hàng của bạn đang chờ xác nhận thanh toán.');
                window.location.href = '@Url.Action("Index", "Home")';
            });
        });
    </script>
}